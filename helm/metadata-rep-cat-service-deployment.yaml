apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: metadata-rep-cat
  name: metadata-rep-cat
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metadata-rep-cat
  strategy: 
    type: Recreate
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-init-first: "true"
        vault.hashicorp.com/tls-skip-verify: "true"
        vault.hashicorp.com/agent-inject-secret-variables: 'secret/mrs-cat/data'
        vault.hashicorp.com/agent-inject-template-variables: |
          {{ with secret "secret/mrs-cat/data" -}}
          export METADATA_REPOSITORY_SERVICE_DATA_LOAD_URL={{ .Data.mrs_cat_url }}
          {{- end }}
        vault.hashicorp.com/role: "mrs-cat-role"
        proxy.istio.io/config: '{ "holdApplicationUntilProxyStarts": true }'
      labels:
        app: metadata-rep-cat
    spec:
      serviceAccountName: mrs-cat
      containers:
        - args:
            - |2
            
              source /vault/secrets/variables
              set -x
              if [ "${METADATA_REPOSITORY_SERVICE_DATA_LOAD_URL}" != "" ]; then
                # Obtain the data to be imported
                curl -Lo /tmp/metadata-catalogue.zip "${METADATA_REPOSITORY_SERVICE_DATA_LOAD_URL}"
                mkdir /tmp/metadata-catalogue /tmp/example_dir
                cd /tmp/metadata-catalogue
                unzip /tmp/metadata-catalogue.zip
                find /tmp/metadata-catalogue
                pip install typer

                # Clear the database
                /service/scripts/delete_all_metadata_records.py \
                  --db-url "${METADATA_REPOSITORY_SERVICE_DB_URL}" \
                  --db-name "${METADATA_REPOSITORY_SERVICE_DB_NAME}"

                # Populate the database
                /service/scripts/populate_metadata_store.py --example-dir /tmp/metadata-catalogue \
                  --db-url "${METADATA_REPOSITORY_SERVICE_DB_URL}" \
                  --db-name "${METADATA_REPOSITORY_SERVICE_DB_NAME}"
              fi

              # Run the service
              metadata-repository-service
          command:
            - ash
            - -c
          env:
            - name: METADATA_REPOSITORY_SERVICE_API_ROOT_PATH
              value: /api/repository
            - name: METADATA_REPOSITORY_SERVICE_CORS_ALLOWED_HEADERS
              value: '["*"]'
            - name: METADATA_REPOSITORY_SERVICE_CORS_ALLOWED_METHODS
              value: '["*"]'
            - name: METADATA_REPOSITORY_SERVICE_CORS_ALLOWED_ORIGINS
              value: '["*"]'
            - name: METADATA_REPOSITORY_SERVICE_CORS_ALLOW_CREDENTIALS
              value: "true"
            - name: METADATA_REPOSITORY_SERVICE_DB_NAME
              value: metadata-catalogue
            - name: METADATA_REPOSITORY_SERVICE_DB_URL
              value: mongodb://mongodb.data-portal.svc.cluster.local:27017
            - name: METADATA_REPOSITORY_SERVICE_HOST
              value: 0.0.0.0
            - name: METADATA_REPOSITORY_SERVICE_LOG_LEVEL
              value: debug
            - name: METADATA_REPOSITORY_SERVICE_PORT
              value: "8080"
          image: ghga/metadata-repository-service:main
          name: metadata-rep-cat
          ports:
            - containerPort: 8080
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mrs-cat
  labels:
    app: metadata-rep-cat
