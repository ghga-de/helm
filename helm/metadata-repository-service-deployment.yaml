apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: metadata-repository
  name: metadata-repository
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metadata-repository
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-init-first: "true"
        vault.hashicorp.com/tls-skip-verify: "true"
        vault.hashicorp.com/agent-inject-secret-variables: 'secret/mrs/data'
        vault.hashicorp.com/agent-inject-template-variables: |
          {{ with secret "secret/mrs/data" -}}
          export METADATA_REPOSITORY_SERVICE_DATA_LOAD_URL={{ .Data.mrs_url }}
          {{- end }}
        vault.hashicorp.com/role: "mrs-role"
        proxy.istio.io/config: '{ "holdApplicationUntilProxyStarts": true }'
      labels:
        app: metadata-repository
        version: 1-dev
    spec:
      serviceAccountName: mrs
      containers:
      - args:
        - |2
          source /vault/secrets/variables
          set -x
          if [ "${METADATA_REPOSITORY_SERVICE_DATA_LOAD_URL}" != "" ]; then
            # Obtain the data to be imported
            # scp -i /vault/secrets/cert -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null noone@tue.blobfish.ghga-dev.de:/home/noone/data.zip /tmp/data.zip 2>/dev/null
            curl -Lo /tmp/data.zip "${METADATA_REPOSITORY_SERVICE_DATA_LOAD_URL}"
            mkdir /tmp/data /tmp/example_dir
            cd /tmp/data
            unzip /tmp/data.zip
            find /tmp/data
            pip install typer
            # Clear the database
            /service/scripts/delete_all_metadata_records.py \
              --db-url "${METADATA_REPOSITORY_SERVICE_DB_URL}" \
              --db-name "${METADATA_REPOSITORY_SERVICE_DB_NAME}"
            # Convert the data to GHGA format
            python scripts/transform_ega_to_ghga.py \
              --output /tmp/example_dir \
                            blobfish-transform.yml
            # Populate the database
            /service/scripts/populate_metadata_store.py --example-dir /tmp/example_dir \
              --db-url "${METADATA_REPOSITORY_SERVICE_DB_URL}" \
              --db-name "${METADATA_REPOSITORY_SERVICE_DB_NAME}"
          fi
          # Run the service
            metadata-repository-service
        command:
        - bash
        - -c
        env:
        - name: METADATA_REPOSITORY_SERVICE_API_ROOT_PATH
          value: /api/repository
#        - name: METADATA_REPOSITORY_SERVICE_DATA_LOAD_URL
#          value: http://193.196.29.176/data.zip
# Fixing metadata repo issue
#        - name: METADATA_REPOSITORY_SERVICE_CORS_ALLOW_CREDENTIALS
#          value: true
#        - name: METADATA_REPOSITORY_SERVICE_CORS_ALLOWED_ORIGINS
#          value: '*'
# Fixing metadata repo issue
        - name: METADATA_REPOSITORY_SERVICE_DB_NAME
          value: metadata-db
        - name: METADATA_REPOSITORY_SERVICE_DB_URL
          value: mongodb://mongodb
         #value: mongodb://metadata-db
        - name: METADATA_REPOSITORY_SERVICE_HOST
          value: 0.0.0.0
        image: ghga/metadata-repository-service:0.0.0-27-952d1c6-main
        name: metadata-repository
        ports:
        - containerPort: 8080
        volumeMounts:
          - mountPath: /dataimport
            name: metadata-repository-pv
      restartPolicy: Always
      volumes:
        - name: metadata-repository-pv
          persistentVolumeClaim:
            claimName: metadata-repository-pvc
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mrs
  labels:
    app: metadata-repository
